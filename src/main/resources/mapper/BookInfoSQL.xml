<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.BookInfoDAO">

   <!-- 모든 책 정보 조회 -->
   <select id="selectAllBookInfo" resultType="com.example.demo.vo.BookInfoVO">
        SELECT * FROM BOOK_INFO_TBL ORDER BY BOOK_KEY DESC
   </select>

   <!-- book_key로 책 정보 조회 (Oracle에 맞춰 fetch first 사용) -->
   <select id="selectByKey" parameterType="String" resultType="com.example.demo.vo.BookInfoVO">
      SELECT * 
      FROM BOOK_INFO_TBL
      WHERE book_key = #{book_key}
      FETCH FIRST 1 ROWS ONLY <!-- Oracle의 경우 FETCH FIRST 사용 -->
   </select>
   <!-- book_key로 책 정보 조회 (Oracle에 맞춰 fetch first 사용 및 LOCK 적용) -->
   <select id="selectByKeyLock" parameterType="String" resultType="com.example.demo.vo.BookInfoVO">
      SELECT * 
      FROM BOOK_INFO_TBL
      WHERE book_key = #{book_key}
      FETCH FIRST 1 ROWS ONLY
      FOR UPDATE NOWAIT
   </select>


   <!-- 새 책 정보 추가 -->
   <insert id="insert" parameterType="com.example.demo.vo.BookInfoVO">
      INSERT INTO BOOK_INFO_TBL (book_key, book_reg_no, book_title, book_author, book_publisher)
      VALUES (#{book_key}, #{book_reg_no}, #{book_title}, #{book_author}, #{book_publisher})
   </insert>

   <!-- 책 정보 수정 -->
   <update id="update" parameterType="com.example.demo.vo.BookInfoVO">
      UPDATE BOOK_INFO_TBL
      SET book_reg_no = #{book_reg_no},
          book_title = #{book_title},
          book_author = #{book_author},
          book_publisher = #{book_publisher}
      WHERE book_key = #{book_key}
   </update>

   <!-- 책 정보 삭제 -->
   <delete id="delete" parameterType="String">
      DELETE FROM BOOK_INFO_TBL
      WHERE book_key = #{book_key}
   </delete>

</mapper>
